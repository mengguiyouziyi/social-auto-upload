version: '3.8'

services:
  # 后端 API 服务
  backend:
    build: .
    ports:
      - "5409:5409"
    environment:
      - FLASK_ENV=production
      - DEBUG=False
      - DATABASE_URL=postgresql://postgres:password@db:5432/social_upload
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./cookies:/app/cookies
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - social-network

  # 前端开发服务器 (开发环境使用)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./sau_frontend:/app/sau_frontend
      - /app/sau_frontend/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:5409
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - social-network
    profiles:
      - dev

  # PostgreSQL 数据库
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=social_upload
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - social-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - social-network

  # Nginx 反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - social-network
    profiles:
      - prod

  # 数据库初始化 (一次性任务)
  db-init:
    build: .
    command: python scripts/init_db.py
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/social_upload
    depends_on:
      - db
    networks:
      - social-network
    profiles:
      - init

volumes:
  postgres_data:
  redis_data:

networks:
  social-network:
    driver: bridge